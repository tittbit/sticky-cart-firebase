{
  "version": 3,
  "sources": ["../../../app/routes/app.analytics.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.analytics.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.analytics.jsx\");\n  import.meta.hot.lastModified = \"1758306459011\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { authenticate } from \"../shopify.server\";\nimport { Card, Layout, Page, Text, BlockStack, DataTable, Badge, InlineStack } from \"@shopify/polaris\";\nexport const loader = async ({\n  request\n}) => {\n  const {\n    admin,\n    session\n  } = await authenticate.admin(request);\n\n  // Fetch orders data for analytics\n  try {\n    const orders = await admin.rest.resources.Order.all({\n      session,\n      limit: 250,\n      status: 'any'\n    });\n\n    // Calculate analytics\n    const totalOrders = orders.data.length;\n    const totalRevenue = orders.data.reduce((sum, order) => sum + parseFloat(order.total_price || 0), 0);\n    const averageOrderValue = totalOrders > 0 ? totalRevenue / totalOrders : 0;\n\n    // Determine billing tier\n    let billingTier = 'Free (Development)';\n    let monthlyFee = 0;\n    if (totalOrders > 500) {\n      billingTier = 'Professional';\n      monthlyFee = 54.99;\n    } else if (totalOrders > 200) {\n      billingTier = 'Growth';\n      monthlyFee = 34.99;\n    } else if (totalOrders > 0) {\n      billingTier = 'Starter';\n      monthlyFee = 29.99;\n    }\n    return {\n      analytics: {\n        totalOrders,\n        totalRevenue,\n        averageOrderValue,\n        billingTier,\n        monthlyFee\n      },\n      shopDomain: session.shop\n    };\n  } catch (error) {\n    console.error('Error fetching analytics:', error);\n    return {\n      analytics: {\n        totalOrders: 0,\n        totalRevenue: 0,\n        averageOrderValue: 0,\n        billingTier: 'Free (Development)',\n        monthlyFee: 0\n      },\n      shopDomain: session.shop,\n      error: 'Failed to load analytics data'\n    };\n  }\n};\nexport default function Analytics() {\n  _s();\n  const {\n    analytics,\n    shopDomain,\n    error\n  } = useLoaderData();\n  const rows = [['Total Orders', analytics.totalOrders.toLocaleString()], ['Total Revenue', `$${analytics.totalRevenue.toFixed(2)}`], ['Average Order Value', `$${analytics.averageOrderValue.toFixed(2)}`], ['Current Billing Tier', analytics.billingTier], ['Monthly Fee', `$${analytics.monthlyFee}`]];\n  return <Page>\n      <ui-title-bar title=\"Analytics & Billing\" />\n      <Layout>\n        <Layout.Section>\n          <BlockStack gap=\"500\">\n            <Card>\n              <BlockStack gap=\"300\">\n                <InlineStack align=\"space-between\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Store Performance\n                  </Text>\n                  <Badge status={analytics.totalOrders > 0 ? 'success' : 'info'}>\n                    {analytics.billingTier}\n                  </Badge>\n                </InlineStack>\n                \n                {error && <Text tone=\"critical\">{error}</Text>}\n                \n                <DataTable columnContentTypes={['text', 'text']} headings={['Metric', 'Value']} rows={rows} />\n              </BlockStack>\n            </Card>\n\n            <Card>\n              <BlockStack gap=\"300\">\n                <Text as=\"h2\" variant=\"headingMd\">\n                  Billing Information\n                </Text>\n                \n                <Text>\n                  Your current billing tier is determined by your total number of orders:\n                </Text>\n                \n                <div style={{\n                marginLeft: '16px'\n              }}>\n                  <Text>\u2022 Free: Development stores only</Text>\n                  <Text>\u2022 Starter ($29.99/mo): 0-200 orders</Text>\n                  <Text>\u2022 Growth ($34.99/mo): 201-500 orders</Text>\n                  <Text>\u2022 Professional ($54.99/mo): 501-1000 orders</Text>\n                </div>\n                \n                <Text>\n                  All paid plans include a 14-day free trial. Billing is handled securely through Shopify.\n                </Text>\n                \n                {analytics.totalOrders > 0 && <Text tone=\"subdued\">\n                    Based on your {analytics.totalOrders} orders, you are in the {analytics.billingTier} tier.\n                  </Text>}\n              </BlockStack>\n            </Card>\n\n            <Card>\n              <BlockStack gap=\"300\">\n                <Text as=\"h2\" variant=\"headingMd\">\n                  Cart Drawer Impact\n                </Text>\n                \n                <Text>\n                  Track how the Sticky Cart Drawer is impacting your store's performance:\n                </Text>\n                \n                <div style={{\n                marginLeft: '16px'\n              }}>\n                  <Text>\u2705 Reduced cart abandonment</Text>\n                  <Text>\u2705 Increased average order value through upsells</Text>\n                  <Text>\u2705 Improved user experience with faster checkout</Text>\n                  <Text>\u2705 Enhanced mobile shopping experience</Text>\n                </div>\n                \n                <Text tone=\"subdued\">\n                  Detailed analytics and conversion tracking coming soon!\n                </Text>\n              </BlockStack>\n            </Card>\n          </BlockStack>\n        </Layout.Section>\n      </Layout>\n    </Page>;\n}\n_s(Analytics, \"63XvUh4n6hK8XXZXkTh7ZLDQZ9s=\", false, function () {\n  return [useLoaderData];\n});\n_c = Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
